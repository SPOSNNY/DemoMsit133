@{
	ViewData["Title"] = "Address";
}

<h1>Address</h1>
<select id="city">
</select>

<select id="Districts">
</select>

<select id="Roads">
</select>
@section script{
    <script>

    @*Init();

    //點擊城市下拉式選單顯示鄉鎮下拉式選單內容
	$("#city").on('change',function()
	{
		$('#Districts').empty();
		let selCity = $("#city").val();
		const url = "@Url.Content("~/api/Districts")";
		const parms = `?city=${selCity}`;

		//步驟二對伺服器發出要求(Request)
		GetMethod(url+parms,null,function (response) {

			 $.each(response, function (i, item) {
				 console.log(item);

		     $('#Districts').append($('<option>', {
		        value: item.siteId,
		        text : item.siteId
			    }));
			})

			},function (thrownError) {
		  console.log(thrownError);
		});
	});


	//點擊鄉鎮下拉式選單顯示路名下拉式選單內容
		$("#Districts").change(function roads(){
		$('#Roads').empty();
		let selDistricts = $("#Districts").val();
		const url = "@Url.Content("~/api/Roads")";
		const parms = `?Districts=${selDistricts}`;

		//步驟二對伺服器發出要求(Request)
		GetMethod(url+parms,null,function (response) {

			 $.each(response, function (i, item) {
				 console.log(item);

		     $('#Roads').append($('<option>', {
		        value: item.road,
		        text : item.road
			    }));
			})

			},function (thrownError) {
		  console.log(thrownError);
		})
		});


	呼叫API方法
	function GetMethod(url,data,success,fail){
		$.ajax({
			type: "GET",
			url: url,
			data:data,
			dataType: "json",
			success: success,
			error: fail
	})
	}


	function Init(){

		GetMethod("@Url.Content("~/api/City")",
		null,
		function (response) {

			$.each(response, function (i, item) {


			$('#city').append($('<option>', {
				value: item.city,
				text : item.city
				}));
			})
			},
		function (thrownError) {
		  console.log(thrownError);
		})
	};*@




//-------------------------------------------------------------

        const selCity = document.querySelector('#city');
        const selDistrict = document.querySelector('#Districts');
        const selRoad = document.querySelector('#Roads');

        selCity.addEventListener('change', () => {
            const city = selCity.options[selCity.selectedIndex].value;
            console.log(city);
            fetch("@Url.Content("~/api/districts")?city=" + city)
                .then(response => response.json())
                .then(datas => {
                     renderDistrict(datas);
                    const district = selDistrict.options[selDistrict.selectedIndex].value;
                    return fetch("@Url.Content("~/api/roads")?districts=" + district )
                })
                .then(datas => {
                    renderRoad(datas);
                })
                .catch(error => {
                    console.log("有錯誤：" + error);
                })
          })

        selDistrict.addEventListener('change', () => {
               const district = selDistrict.options[selDistrict.selectedIndex].value;
            fetch("@Url.Content("~/api/roads")?districts=" + district)
                .then(response => response.json())
                     .then(datas => {
                          renderRoad(datas);
                     })
                    .catch(error => {
                          console.log("有錯誤：" + error);
                    })
        })
        fetch("@Url.Content("~/api/city")")
            .then(response => response.json())
            .then(datas => {
                renderCity(datas);
                const city = selCity.options[selCity.selectedIndex].value;
                return fetch("@Url.Content("~/api/districts")?city=" + city )
            })
            .then(response => response.json())
            .then(datas => {
                renderDistrict(datas);
                const district = selDistrict.options[selDistrict.selectedIndex].value;
                return fetch("@Url.Content("~/api/roads")?districts=" + district )
            })
            .then(response => response.json())
            .then(datas => {
                renderRoad(datas);
            })
            .catch(error => {
                console.log("有錯誤：" + error);
            })

     

        function renderCity(datas) {
            datas.forEach(item => {
                const opt = new Option(item.city, item.city);
                selCity.options.add(opt);
            })
        }
        function renderDistrict(datas) {
            //清除原有的option標籤
            while (selDistrict.length > 0) {
                selDistrict.remove(selDistrict.length - 1)
            }
            datas.forEach(item => {
                const opt = new Option(item.siteId, item.siteId);
                selDistrict.options.add(opt);
            })
        }
        function renderRoad(datas) {
            //清除原有的option標籤
            while (selRoad.length > 0) {
                selRoad.remove(selRoad.length - 1)
            }
            datas.forEach(item => {
                const opt = new Option(item.road, item.road);
                selRoad.options.add(opt);
            })
        }





    </script>
}
